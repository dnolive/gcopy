<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%" borderVisible="false" dropShadowVisible="false"
		 title="Movimento do Consumo Periódico">
	
	<s:layout>
		<s:VerticalLayout gap="0"/>
	</s:layout>

	<fx:Declarations>
	</fx:Declarations>
	
	
	<fx:Script>
		<![CDATA[
			import app.models.Movimento;
			import app.services.FactoryService;
			import app.services.ModelLocator;
			
			import core.controllers.Gateway;
			import core.controllers.IDataService;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.GridSelectionEvent;
			import spark.events.TextOperationEvent;
			
			[Embed(source='assets/images/disquete_18.png')]
			private const icoSave:Class;
			[Embed(source='assets/images/add.png')]
			private const icoNovo:Class;
			[Embed(source='assets/images/pencil.png')]
			private const icoEdit:Class;
			[Embed(source='assets/images/delete.png')]
			private const icoDelete:Class;
			
			
			[Bindable]
			private var object: Movimento;
			
			[Bindable]
			private var helper: ModelLocator = ModelLocator.getInstance();
			
			[Bindable]
			private var service: IDataService = FactoryService.get(FactoryService.MOVIMENTO);
			
			
			protected function onCreationComplete(event:FlexEvent):void	{
				this.service.setFilter(this.onFilterList);
				this.service.getAll();
			}
			
			protected function inputProcurarChange(event:TextOperationEvent):void {
				this.service.filtered = (this.inputProcurar.text.length>0);
				this.service.refresh();
			}
			
			protected function buttonNovoClick(event:MouseEvent):void	{
				this.object = new Movimento();
			}
			
			protected function buttonDeleteClick(event:MouseEvent):void	{
				this.service.remove(this.object);
			}
			
			protected function buttonAlterarClick(event:MouseEvent):void	{
				this.service.save(this.object);
			}
			
			protected function datagridChange(event:GridSelectionEvent):void {
				this.object = dataGrid.selectedItem as Movimento;
			}
			
			protected function onFilterList(item:Object):Boolean {
				return (item.nome.toLowerCase().search(this.inputProcurar.text.toLowerCase()) != -1);
			}
			
		]]>
	</fx:Script>
	
	
	<s:BorderContainer x="0" y="0" width="100%" height="32" borderVisible="true">
		<s:layout>
			<s:HorizontalLayout paddingLeft="10" paddingRight="10" verticalAlign="middle"/>
		</s:layout>
		<s:Label text="Localizar:"/>
		<s:TextInput id="inputProcurar" width="100%"/>
		<s:Button width="39" label="OK"/>
		<s:Spacer width="40%" height="10"/>
		<s:Button id="buttonNovo" label="Novo" useHandCursor="true" 
				  click="buttonNovoClick(event)" icon="{this.icoNovo}"/>
		<s:Button id="buttonAlterar" label="Alterar" click="buttonAlterarClick(event)" 
				  icon="{this.icoEdit}" enabled="{this.object!=null}" useHandCursor="true"/>
		<s:Button id="buttonExcluir" label="Excluir" click="buttonDeleteClick(event)" 
				  icon="{this.icoDelete}" enabled="{this.object!=null}" useHandCursor="true"/>
	</s:BorderContainer>
	
	<s:DataGrid id="dataGrid" x="0" y="40" width="100%" height="100%" borderVisible="false"
				dataProvider="{this.service.collection}" fontSize="11"
				selectionChange="datagridChange(event)" resizableColumns="false">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="id" headerText="Código" width="70"></s:GridColumn>
				<s:GridColumn dataField="data" headerText="Data" width="80"></s:GridColumn>
				<s:GridColumn dataField="referencia" headerText="Referência" width="80"></s:GridColumn>
				<s:GridColumn dataField="locadora.nome" headerText="Franquia"></s:GridColumn>
				<s:GridColumn dataField="leiturista" headerText="Leiturista"></s:GridColumn>
				<s:GridColumn dataField="quantCopia" headerText="Qtd. Cópias" width="100"></s:GridColumn>
				<s:GridColumn dataField="valorCopia" headerText="Vlr. Cópia" width="100"></s:GridColumn>
				<s:GridColumn dataField="totalCopia" headerText="Total" width="100"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>

	
</s:Panel>
